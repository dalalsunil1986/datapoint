<?php

function datapoint_install() {
  drupal_install_schema('datapoint');
}

function datapoint_uninstall() {
  drupal_uninstall_schema('datapoint');
}

function datapoint_schema() {
  $schema = array();

  $schema['datapoint_source'] = array(
    'fields' => array(
      'sid' => array(
        'description' => t('The unique identifier for the data point source.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'source_type' => array(
        'description' => t('The type of the source.'),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => t('The name of the feed.'),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'pinged' => array(
        'description' => t('If the source has been pinged since the last update.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'last_update' => array(
        'description' => t('The last time the source was updated.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'configuration' => array(
        'description' => t('Serialized configuration data for the source.'),
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
    ),
    'primary key' => array('sid'),
  );

  $schema['datapoint_source_type'] = array(
    'fields' => array(
      'type' => array(
        'description' => t('The machine-readable name of this content type.'),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => t('The human-readable name of this content type.'),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'configuration' => array(
        'description' => t('Serialized configuration data for the source type.'),
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
    ),
    'primary key' => array('type'),
  );

  $schema['datapoint'] = array(
    'fields' => array(
      'pid' => array(
        'description' => t('The unique identifier for the data point.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => t('The currently active vertex.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'sid' => array(
        'description' => t('The source for the data point.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'external_id' => array(
        'description' => t('The external id for the data point.'),
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => t('The name of the feed.'),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('pid'),
  );
  return $schema;
}