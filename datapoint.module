<?php
require_once('datapoint.inc');

function datapoint_init() {
  $modules = module_implements('datapoint_update');
  foreach ($modules as $module) {
    $results = new DatapointResults();
  }
}

function datapoint_menu() {
  $menu = array();
  $menu['admin/content/datapoint/source/add'] = array(
    'title' => t('Add new data point source'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_datapoint_source_add'),
    'access arguments' => array('administer datapoint sources'),
    'type' => MENU_NORMAL_ITEM,
  );
  $menu['datapoint/source/configuration_ahah'] = array(
    'page callback' => 'datapoint_source_configuration_ahah',
    'access arguments' => array('administer datapoint sources'),
    'type' => MENU_CALLBACK,
  );
  return $menu;
}

function datapoint_perm() {
  return array('administer datapoint sources');
}

function datapoint_update_feed($fid) {
  // $url is the resource path of the Y! Weather RSS
  // with the appended querystring of zip code/location id.
  $url = 'http://xml.weather.yahoo.com/forecastrss?p=SWXX0020&u=c';

  // This function initializes CURL, sets the necessary CURL
  // options, executes the request and returns the results.
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  $result = curl_exec($ch);
  curl_close($ch);
}

function _datapoint_source_add() {
  $form = array();
  
  $modules = module_implements('datapoint');
  $source_types = array(
    0 => t('-- Select a source type'),
  );
  foreach ($modules as $module) {
    $info = call_user_func($module . '_datapoint');
    $source_types[$module] = $info['name'];
  }
  
  $form['sources'] = array(
    '#type' => 'select',
    '#title' => t('Source types'),
    '#options' => $source_types,
    '#default_value' => 0,
    '#ahah' => array(
      'method' => 'replace',
      'wrapper' => 'source-configuration',
      'path' => 'datapoint/source/configuration_ahah'
    ),
  );
  
  $form['configuration'] = array(
    '#type' => 'markup',
    '#prefix' => '<div id="source-configuration">',
    '#suffix' => '</div>',
    '#value' => t('Select a source type'),
  );
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  
  return $form;
}

function datapoint_source_configuration_ahah() {
  $cached_form_state = array();
  $cached_form = form_get_cache($_POST['form_build_id'], $cached_form_state);
  
  $module = $_POST['sources'];
  $info = call_user_func($module . '_datapoint');
  $set = call_user_func($info['configuration'], array());
  
  $cached_form['configuration']['set'] = $set;
  form_set_cache($_POST['form_build_id'], $cached_form, $cached_form_state);
  $form_state = array('submitted' => FALSE);
  $set = form_builder('datapoint_source_configuration_ahah', $set, $form_state);
  $output = drupal_render($set);
  print drupal_to_js(array('status' => TRUE, 'data' => $output));
  exit;
}